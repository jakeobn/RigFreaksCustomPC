==> Cloning from https://github.com/jakeobn/rigfreaks-ecommerce
==> Checking out commit b98206c6b5b3f2656de4bd7d267de7cb92839775 in branch main
==> Downloading cache...
==> Transferred 231MB in 8s. Extraction took 6s.
==> Using Node.js version 22.14.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install; npm run build'...
up to date, audited 606 packages in 1s
88 packages are looking for funding
  run `npm fund` for details
7 moderate severity vulnerabilities
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.14 building for production...
transforming...
Browserslist: browsers data (caniuse-lite) is 7 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
✓ 2807 modules transformed.
rendering chunks...
[plugin:vite:reporter] [plugin vite:reporter] 
(!) /opt/render/project/src/client/src/lib/supabaseStorage.ts is dynamically imported by /opt/render/project/src/client/src/pages/ComponentAdmin.tsx, /opt/render/project/src/client/src/pages/ComponentAdmin.tsx but also statically imported by /opt/render/project/src/client/src/components/ui/supabase-image-upload.tsx, /opt/render/project/src/client/src/pages/SupabaseComponentAdmin.tsx, dynamic import will not move module into another chunk.
[plugin:vite:reporter] [plugin vite:reporter] 
(!) /opt/render/project/src/client/src/lib/themeLoader.ts is dynamically imported by /opt/render/project/src/client/src/pages/ThemeCustomizer.tsx but also statically imported by /opt/render/project/src/client/src/App.tsx, dynamic import will not move module into another chunk.
computing gzip size...
../dist/public/index.html                                    0.63 kB │ gzip:   0.38 kB
../dist/public/assets/RigFreaks-JtUMISZa.png                30.79 kB
../dist/public/assets/Untitled design (1)-D80XsI8K.png  10,034.51 kB
../dist/public/assets/Untitled design (3)-OyMEw82Y.png  10,350.15 kB
../dist/public/assets/index-C88jstg8.css                   148.88 kB │ gzip:  22.99 kB
../dist/public/assets/browser-JPJoPghg.js                    0.30 kB │ gzip:   0.25 kB
../dist/public/assets/index-C4lFoEoG.js                  1,672.20 kB │ gzip: 452.31 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 10.42s
  dist/index.js  126.6kb
⚡ Done in 10ms
==> Uploading build...
==> Uploaded in 10.3s. Compression took 5.1s
==> Build successful 🎉
==> Deploying...
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Shopify API Configuration:
Shop Name: Not set
Admin Access Token: Not set
Base URL: https://undefined/admin/api/2024-01
Checking and initializing Supabase schema...
Checking and initializing Supabase schema...
Products table might not exist: relation "public.products" does not exist
Supabase schema initialization complete.
Supabase schema initialized successfully
Checking and initializing Supabase schema...
Products table might not exist: relation "public.products" does not exist
Supabase schema initialization complete.
Supabase schema initialized successfully
6:33:49 PM [express] serving on port 5000
==> Your service is live 🎉