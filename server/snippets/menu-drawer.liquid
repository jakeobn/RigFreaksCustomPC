<style>
  .drawer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }
  
  .drawer[aria-hidden="false"] {
    opacity: 1;
    visibility: visible;
  }
  
  .drawer--left .drawer__panel {
    left: 0;
    transform: translateX(-100%);
  }
  
  .drawer--right .drawer__panel {
    right: 0;
    transform: translateX(100%);
  }
  
  .drawer--top .drawer__panel {
    top: 0;
    transform: translateY(-100%);
    width: 100%;
    height: auto;
    max-height: 80vh;
  }
  
  .drawer[aria-hidden="false"] .drawer__panel {
    transform: translateX(0) translateY(0);
  }
  
  .drawer__panel {
    position: absolute;
    width: 100%;
    max-width: 400px;
    height: 100%;
    background-color: {{ settings.color_background }};
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
    display: flex;
    flex-direction: column;
  }
  
  .drawer__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem;
    border-bottom: 1px solid {{ settings.color_border }};
  }
  
  .drawer__title {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: {{ settings.color_text }};
  }
  
  .drawer__close {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: none;
    background: none;
    color: {{ settings.color_text }};
    cursor: pointer;
    padding: 0;
  }
  
  .drawer__content {
    flex: 1;
    overflow-y: auto;
    padding: 1.5rem;
  }
  
  .menu-drawer__menu {
    margin: 0;
    padding: 0;
    list-style: none;
  }
  
  .menu-drawer__item {
    border-bottom: 1px solid {{ settings.color_border }};
  }
  
  .menu-drawer__item:last-child {
    border-bottom: none;
  }
  
  .menu-drawer__link {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 0;
    color: {{ settings.color_text }};
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }
  
  .menu-drawer__link:hover,
  .menu-drawer__link--active {
    color: {{ settings.color_primary }};
  }
  
  .menu-drawer__submenu {
    margin: 0;
    padding: 0 0 0 1rem;
    list-style: none;
    display: none;
  }
  
  .menu-drawer__item[open] .menu-drawer__submenu {
    display: block;
  }
  
  .menu-drawer__toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: none;
    background: none;
    color: {{ settings.color_text }};
    cursor: pointer;
    padding: 0;
  }
  
  .menu-drawer__icon {
    transition: transform 0.2s ease;
  }
  
  .menu-drawer__item[open] .menu-drawer__icon {
    transform: rotate(180deg);
  }
  
  .menu-drawer__footer {
    padding: 1.5rem;
    border-top: 1px solid {{ settings.color_border }};
  }
  
  @media screen and (max-width: 750px) {
    .drawer__panel {
      max-width: 320px;
    }
  }
</style>

<div class="drawer__panel">
  <div class="drawer__header">
    <h2 class="drawer__title">{{ 'general.navigation.menu' | t }}</h2>
    <button class="drawer__close" data-drawer-close aria-label="{{ 'accessibility.close' | t }}">
      {% render 'icon-close' %}
    </button>
  </div>
  
  <div class="drawer__content">
    <nav class="menu-drawer">
      <ul class="menu-drawer__menu">
        {%- for link in menu.links -%}
          <li class="menu-drawer__item {% if link.links.size > 0 %}menu-drawer__item--has-submenu{% endif %}" {% if link.links.size > 0 %}data-accordion{% endif %}>
            {%- if link.links.size > 0 -%}
              <details>
                <summary>
                  <a 
                    href="{{ link.url }}" 
                    class="menu-drawer__link {% if link.active %}menu-drawer__link--active{% endif %}"
                  >
                    {{ link.title }}
                  </a>
                  <button class="menu-drawer__toggle" aria-label="{{ 'general.accessibility.expand_menu' | t }}">
                    <span class="menu-drawer__icon">
                      {% render 'icon-chevron-down' %}
                    </span>
                  </button>
                </summary>
                
                <ul class="menu-drawer__submenu">
                  {%- for child_link in link.links -%}
                    <li class="menu-drawer__item">
                      <a 
                        href="{{ child_link.url }}" 
                        class="menu-drawer__link {% if child_link.active %}menu-drawer__link--active{% endif %}"
                      >
                        {{ child_link.title }}
                      </a>
                    </li>
                  {%- endfor -%}
                </ul>
              </details>
            {%- else -%}
              <a 
                href="{{ link.url }}" 
                class="menu-drawer__link {% if link.active %}menu-drawer__link--active{% endif %}"
              >
                {{ link.title }}
              </a>
            {%- endif -%}
          </li>
        {%- endfor -%}
      </ul>
    </nav>
  </div>
  
  {%- if shop.customer_accounts_enabled -%}
    <div class="menu-drawer__footer">
      {%- if customer -%}
        <a href="{{ routes.account_url }}" class="menu-drawer__account-link">
          {{ 'customer.account.title' | t }}
        </a>
        <a href="{{ routes.account_logout_url }}" class="menu-drawer__account-link">
          {{ 'customer.log_out' | t }}
        </a>
      {%- else -%}
        <a href="{{ routes.account_login_url }}" class="menu-drawer__account-link">
          {{ 'customer.sign_in' | t }}
        </a>
        <a href="{{ routes.account_register_url }}" class="menu-drawer__account-link">
          {{ 'customer.register' | t }}
        </a>
      {%- endif -%}
    </div>
  {%- endif -%}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle accordion summaries (mobile menu toggles)
    const accordions = document.querySelectorAll('[data-accordion] summary');
    
    if (accordions.length > 0) {
      accordions.forEach(summary => {
        summary.addEventListener('click', function(event) {
          // Prevent the default details toggle behavior when clicking the button
          const clickedElement = event.target.closest('button');
          if (clickedElement && clickedElement.classList.contains('menu-drawer__toggle')) {
            event.preventDefault();
            const details = this.parentNode;
            
            // Toggle the open attribute
            details.toggleAttribute('open');
          }
        });
      });
    }
    
    // Close drawer buttons
    const closeButtons = document.querySelectorAll('[data-drawer-close]');
    
    closeButtons.forEach(button => {
      button.addEventListener('click', function() {
        const drawer = this.closest('.drawer');
        if (drawer) {
          drawer.setAttribute('aria-hidden', 'true');
          
          // Update trigger button state
          const drawerId = drawer.id;
          if (drawerId) {
            const trigger = document.querySelector(`[data-drawer-trigger="${drawerId}"]`);
            if (trigger) {
              trigger.setAttribute('aria-expanded', 'false');
            }
          }
          
          // Remove body class
          document.body.classList.remove('drawer-open');
        }
      });
    });
  });
</script>